{"ast":null,"code":"import _objectSpread from\"C:/Users/MoritzSteinbach/Desktop/B\\xFCroplanner/officeplan/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";const API_BASE_URL=process.env.NODE_ENV==='production'?'':'http://localhost:8080';class ApiError extends Error{constructor(message,status){super(message);this.status=status;this.name='ApiError';}}async function apiRequest(endpoint){let options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};const url=\"\".concat(API_BASE_URL,\"/api\").concat(endpoint);const config=_objectSpread({headers:_objectSpread({'Content-Type':'application/json'},options.headers)},options);try{const response=await fetch(url,config);if(!response.ok){const errorData=await response.json().catch(()=>({}));throw new ApiError(errorData.error||\"HTTP \".concat(response.status,\": \").concat(response.statusText),response.status);}return await response.json();}catch(error){if(error instanceof ApiError){throw error;}throw new ApiError(\"Netzwerkfehler: \".concat(error instanceof Error?error.message:'Unbekannter Fehler'));}}export const api={// Mitarbeiter\ngetEmployees:()=>apiRequest('/employees'),addEmployee:employee=>apiRequest('/employees',{method:'POST',body:JSON.stringify(employee)}),updateEmployee:(id,employee)=>apiRequest(\"/employees/\".concat(id),{method:'PUT',body:JSON.stringify(employee)}),deleteEmployee:id=>apiRequest(\"/employees/\".concat(id),{method:'DELETE'}),// Abteilungen\ngetDepartments:()=>apiRequest('/departments'),// Anwesenheit\ngetAttendance:()=>apiRequest('/attendance'),addAttendanceEntry:entry=>apiRequest('/attendance',{method:'POST',body:JSON.stringify(entry)}),deleteAttendanceEntry:(employeeId,date)=>apiRequest(\"/attendance/\".concat(employeeId,\"/\").concat(date),{method:'DELETE'})};export{ApiError};","map":{"version":3,"names":["API_BASE_URL","process","env","NODE_ENV","ApiError","Error","constructor","message","status","name","apiRequest","endpoint","options","arguments","length","undefined","url","concat","config","_objectSpread","headers","response","fetch","ok","errorData","json","catch","error","statusText","api","getEmployees","addEmployee","employee","method","body","JSON","stringify","updateEmployee","id","deleteEmployee","getDepartments","getAttendance","addAttendanceEntry","entry","deleteAttendanceEntry","employeeId","date"],"sources":["C:/Users/MoritzSteinbach/Desktop/BÃ¼roplanner/officeplan/src/utils/api.ts"],"sourcesContent":["import { Employee, AttendanceEntry, Department } from '../types';\n\nconst API_BASE_URL = process.env.NODE_ENV === 'production' ? '' : 'http://localhost:8080';\n\nclass ApiError extends Error {\n  constructor(message: string, public status?: number) {\n    super(message);\n    this.name = 'ApiError';\n  }\n}\n\nasync function apiRequest<T>(endpoint: string, options: RequestInit = {}): Promise<T> {\n  const url = `${API_BASE_URL}/api${endpoint}`;\n  \n  const config: RequestInit = {\n    headers: {\n      'Content-Type': 'application/json',\n      ...options.headers,\n    },\n    ...options,\n  };\n\n  try {\n    const response = await fetch(url, config);\n    \n    if (!response.ok) {\n      const errorData = await response.json().catch(() => ({}));\n      throw new ApiError(\n        errorData.error || `HTTP ${response.status}: ${response.statusText}`,\n        response.status\n      );\n    }\n\n    return await response.json();\n  } catch (error) {\n    if (error instanceof ApiError) {\n      throw error;\n    }\n    throw new ApiError(`Netzwerkfehler: ${error instanceof Error ? error.message : 'Unbekannter Fehler'}`);\n  }\n}\n\nexport const api = {\n  // Mitarbeiter\n  getEmployees: (): Promise<Employee[]> => \n    apiRequest<Employee[]>('/employees'),\n\n  addEmployee: (employee: Omit<Employee, 'id'>): Promise<Employee> => \n    apiRequest<Employee>('/employees', {\n      method: 'POST',\n      body: JSON.stringify(employee),\n    }),\n\n  updateEmployee: (id: string, employee: Partial<Employee>): Promise<Employee> => \n    apiRequest<Employee>(`/employees/${id}`, {\n      method: 'PUT',\n      body: JSON.stringify(employee),\n    }),\n\n  deleteEmployee: (id: string): Promise<void> => \n    apiRequest<void>(`/employees/${id}`, {\n      method: 'DELETE',\n    }),\n\n  // Abteilungen\n  getDepartments: (): Promise<Department[]> => \n    apiRequest<Department[]>('/departments'),\n\n  // Anwesenheit\n  getAttendance: (): Promise<AttendanceEntry[]> => \n    apiRequest<AttendanceEntry[]>('/attendance'),\n\n  addAttendanceEntry: (entry: AttendanceEntry): Promise<AttendanceEntry> => \n    apiRequest<AttendanceEntry>('/attendance', {\n      method: 'POST',\n      body: JSON.stringify(entry),\n    }),\n\n  deleteAttendanceEntry: (employeeId: string, date: string): Promise<void> => \n    apiRequest<void>(`/attendance/${employeeId}/${date}`, {\n      method: 'DELETE',\n    }),\n};\n\nexport { ApiError };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}