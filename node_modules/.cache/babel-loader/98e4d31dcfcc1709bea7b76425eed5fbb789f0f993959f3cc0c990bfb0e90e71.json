{"ast":null,"code":"import { startOfWeek, subWeeks, format } from 'date-fns';\nconst STORAGE_KEYS = {\n  EMPLOYEES: 'office_plan_employees',\n  ATTENDANCE: 'office_plan_attendance',\n  DEPARTMENTS: 'office_plan_departments'\n};\n\n// Standard-Abteilungen\nconst DEFAULT_DEPARTMENTS = [{\n  id: '1',\n  name: 'IT',\n  color: '#3b82f6'\n}, {\n  id: '2',\n  name: 'Marketing',\n  color: '#10b981'\n}, {\n  id: '3',\n  name: 'Vertrieb',\n  color: '#f59e0b'\n}, {\n  id: '4',\n  name: 'HR',\n  color: '#8b5cf6'\n}, {\n  id: '5',\n  name: 'Finanzen',\n  color: '#ef4444'\n}];\n\n// Standard-Mitarbeiter\nconst DEFAULT_EMPLOYEES = [{\n  id: '1',\n  name: 'Max Mustermann',\n  department: 'IT'\n}, {\n  id: '2',\n  name: 'Anna Schmidt',\n  department: 'Marketing'\n}, {\n  id: '3',\n  name: 'Tom Weber',\n  department: 'Vertrieb'\n}, {\n  id: '4',\n  name: 'Lisa Müller',\n  department: 'HR'\n}, {\n  id: '5',\n  name: 'Peter Fischer',\n  department: 'Finanzen'\n}];\nexport const storage = {\n  // Hilfsfunktion für sicheres localStorage\n  safeLocalStorage: {\n    getItem: key => {\n      try {\n        if (typeof window !== 'undefined' && window.localStorage) {\n          return window.localStorage.getItem(key);\n        }\n        return null;\n      } catch (error) {\n        console.warn('localStorage nicht verfügbar:', error);\n        return null;\n      }\n    },\n    setItem: (key, value) => {\n      try {\n        if (typeof window !== 'undefined' && window.localStorage) {\n          window.localStorage.setItem(key, value);\n        }\n      } catch (error) {\n        console.warn('localStorage nicht verfügbar:', error);\n      }\n    },\n    removeItem: key => {\n      try {\n        if (typeof window !== 'undefined' && window.localStorage) {\n          window.localStorage.removeItem(key);\n        }\n      } catch (error) {\n        console.warn('localStorage nicht verfügbar:', error);\n      }\n    }\n  },\n  // Abteilungen\n  getDepartments: () => {\n    const stored = storage.safeLocalStorage.getItem(STORAGE_KEYS.DEPARTMENTS);\n    if (stored) {\n      try {\n        return JSON.parse(stored);\n      } catch (error) {\n        console.warn('Fehler beim Parsen der Abteilungsdaten:', error);\n      }\n    }\n    // Erste Initialisierung\n    storage.safeLocalStorage.setItem(STORAGE_KEYS.DEPARTMENTS, JSON.stringify(DEFAULT_DEPARTMENTS));\n    return DEFAULT_DEPARTMENTS;\n  },\n  setDepartments: departments => {\n    storage.safeLocalStorage.setItem(STORAGE_KEYS.DEPARTMENTS, JSON.stringify(departments));\n  },\n  // Mitarbeiter\n  getEmployees: () => {\n    const stored = storage.safeLocalStorage.getItem(STORAGE_KEYS.EMPLOYEES);\n    if (stored) {\n      try {\n        return JSON.parse(stored);\n      } catch (error) {\n        console.warn('Fehler beim Parsen der Mitarbeiterdaten:', error);\n      }\n    }\n    // Erste Initialisierung\n    storage.safeLocalStorage.setItem(STORAGE_KEYS.EMPLOYEES, JSON.stringify(DEFAULT_EMPLOYEES));\n    return DEFAULT_EMPLOYEES;\n  },\n  setEmployees: employees => {\n    storage.safeLocalStorage.setItem(STORAGE_KEYS.EMPLOYEES, JSON.stringify(employees));\n  },\n  // Anwesenheit\n  getAttendance: () => {\n    const stored = storage.safeLocalStorage.getItem(STORAGE_KEYS.ATTENDANCE);\n    let attendance = [];\n    if (stored) {\n      try {\n        attendance = JSON.parse(stored);\n      } catch (error) {\n        console.warn('Fehler beim Parsen der Anwesenheitsdaten:', error);\n        attendance = [];\n      }\n    }\n\n    // Alte Daten bereinigen (älter als 1 Woche)\n    const cleanedAttendance = storage.cleanOldAttendanceData(attendance);\n    if (cleanedAttendance.length !== attendance.length) {\n      storage.setAttendance(cleanedAttendance);\n    }\n    return cleanedAttendance;\n  },\n  setAttendance: attendance => {\n    storage.safeLocalStorage.setItem(STORAGE_KEYS.ATTENDANCE, JSON.stringify(attendance));\n  },\n  // Hilfsfunktionen\n  addAttendanceEntry: entry => {\n    const attendance = storage.getAttendance();\n    const existingIndex = attendance.findIndex(a => a.employeeId === entry.employeeId && a.date === entry.date);\n    if (existingIndex >= 0) {\n      attendance[existingIndex] = entry;\n    } else {\n      attendance.push(entry);\n    }\n    storage.setAttendance(attendance);\n  },\n  getAttendanceForDate: date => {\n    const attendance = storage.getAttendance();\n    return attendance.filter(entry => entry.date === date);\n  },\n  getAttendanceForEmployee: (employeeId, startDate, endDate) => {\n    const attendance = storage.getAttendance();\n    return attendance.filter(entry => {\n      if (entry.employeeId !== employeeId) return false;\n      if (startDate && entry.date < startDate) return false;\n      if (endDate && entry.date > endDate) return false;\n      return true;\n    });\n  },\n  // Alte Anwesenheitsdaten bereinigen (älter als 1 Woche)\n  cleanOldAttendanceData: attendance => {\n    const oneWeekAgo = startOfWeek(subWeeks(new Date(), 1), {\n      weekStartsOn: 1\n    });\n    const cutoffDate = format(oneWeekAgo, 'yyyy-MM-dd');\n    return attendance.filter(entry => entry.date >= cutoffDate);\n  },\n  // Daten zurücksetzen\n  resetData: () => {\n    localStorage.removeItem(STORAGE_KEYS.EMPLOYEES);\n    localStorage.removeItem(STORAGE_KEYS.ATTENDANCE);\n    localStorage.removeItem(STORAGE_KEYS.DEPARTMENTS);\n  }\n};","map":{"version":3,"names":["startOfWeek","subWeeks","format","STORAGE_KEYS","EMPLOYEES","ATTENDANCE","DEPARTMENTS","DEFAULT_DEPARTMENTS","id","name","color","DEFAULT_EMPLOYEES","department","storage","safeLocalStorage","getItem","key","window","localStorage","error","console","warn","setItem","value","removeItem","getDepartments","stored","JSON","parse","stringify","setDepartments","departments","getEmployees","setEmployees","employees","getAttendance","attendance","cleanedAttendance","cleanOldAttendanceData","length","setAttendance","addAttendanceEntry","entry","existingIndex","findIndex","a","employeeId","date","push","getAttendanceForDate","filter","getAttendanceForEmployee","startDate","endDate","oneWeekAgo","Date","weekStartsOn","cutoffDate","resetData"],"sources":["C:/Users/jassy/OneDrive/Desktop/work/office plan/src/utils/storage.ts"],"sourcesContent":["import { Employee, AttendanceEntry, Department } from '../types';\nimport { startOfWeek, subWeeks, format } from 'date-fns';\n\nconst STORAGE_KEYS = {\n  EMPLOYEES: 'office_plan_employees',\n  ATTENDANCE: 'office_plan_attendance',\n  DEPARTMENTS: 'office_plan_departments',\n};\n\n// Standard-Abteilungen\nconst DEFAULT_DEPARTMENTS: Department[] = [\n  { id: '1', name: 'IT', color: '#3b82f6' },\n  { id: '2', name: 'Marketing', color: '#10b981' },\n  { id: '3', name: 'Vertrieb', color: '#f59e0b' },\n  { id: '4', name: 'HR', color: '#8b5cf6' },\n  { id: '5', name: 'Finanzen', color: '#ef4444' },\n];\n\n// Standard-Mitarbeiter\nconst DEFAULT_EMPLOYEES: Employee[] = [\n  { id: '1', name: 'Max Mustermann', department: 'IT' },\n  { id: '2', name: 'Anna Schmidt', department: 'Marketing' },\n  { id: '3', name: 'Tom Weber', department: 'Vertrieb' },\n  { id: '4', name: 'Lisa Müller', department: 'HR' },\n  { id: '5', name: 'Peter Fischer', department: 'Finanzen' },\n];\n\nexport const storage = {\n  \n  // Hilfsfunktion für sicheres localStorage\n  safeLocalStorage: {\n    getItem: (key: string): string | null => {\n      try {\n        if (typeof window !== 'undefined' && window.localStorage) {\n          return window.localStorage.getItem(key);\n        }\n        return null;\n      } catch (error) {\n        console.warn('localStorage nicht verfügbar:', error);\n        return null;\n      }\n    },\n    \n    setItem: (key: string, value: string): void => {\n      try {\n        if (typeof window !== 'undefined' && window.localStorage) {\n          window.localStorage.setItem(key, value);\n        }\n      } catch (error) {\n        console.warn('localStorage nicht verfügbar:', error);\n      }\n    },\n    \n    removeItem: (key: string): void => {\n      try {\n        if (typeof window !== 'undefined' && window.localStorage) {\n          window.localStorage.removeItem(key);\n        }\n      } catch (error) {\n        console.warn('localStorage nicht verfügbar:', error);\n      }\n    }\n  },\n  \n  // Abteilungen\n  getDepartments: (): Department[] => {\n    const stored = storage.safeLocalStorage.getItem(STORAGE_KEYS.DEPARTMENTS);\n    if (stored) {\n      try {\n        return JSON.parse(stored);\n      } catch (error) {\n        console.warn('Fehler beim Parsen der Abteilungsdaten:', error);\n      }\n    }\n    // Erste Initialisierung\n    storage.safeLocalStorage.setItem(STORAGE_KEYS.DEPARTMENTS, JSON.stringify(DEFAULT_DEPARTMENTS));\n    return DEFAULT_DEPARTMENTS;\n  },\n\n  setDepartments: (departments: Department[]): void => {\n    storage.safeLocalStorage.setItem(STORAGE_KEYS.DEPARTMENTS, JSON.stringify(departments));\n  },\n\n  // Mitarbeiter\n  getEmployees: (): Employee[] => {\n    const stored = storage.safeLocalStorage.getItem(STORAGE_KEYS.EMPLOYEES);\n    if (stored) {\n      try {\n        return JSON.parse(stored);\n      } catch (error) {\n        console.warn('Fehler beim Parsen der Mitarbeiterdaten:', error);\n      }\n    }\n    // Erste Initialisierung\n    storage.safeLocalStorage.setItem(STORAGE_KEYS.EMPLOYEES, JSON.stringify(DEFAULT_EMPLOYEES));\n    return DEFAULT_EMPLOYEES;\n  },\n\n  setEmployees: (employees: Employee[]): void => {\n    storage.safeLocalStorage.setItem(STORAGE_KEYS.EMPLOYEES, JSON.stringify(employees));\n  },\n\n  // Anwesenheit\n  getAttendance: (): AttendanceEntry[] => {\n    const stored = storage.safeLocalStorage.getItem(STORAGE_KEYS.ATTENDANCE);\n    let attendance: AttendanceEntry[] = [];\n    \n    if (stored) {\n      try {\n        attendance = JSON.parse(stored);\n      } catch (error) {\n        console.warn('Fehler beim Parsen der Anwesenheitsdaten:', error);\n        attendance = [];\n      }\n    }\n    \n    // Alte Daten bereinigen (älter als 1 Woche)\n    const cleanedAttendance = storage.cleanOldAttendanceData(attendance);\n    if (cleanedAttendance.length !== attendance.length) {\n      storage.setAttendance(cleanedAttendance);\n    }\n    \n    return cleanedAttendance;\n  },\n\n  setAttendance: (attendance: AttendanceEntry[]): void => {\n    storage.safeLocalStorage.setItem(STORAGE_KEYS.ATTENDANCE, JSON.stringify(attendance));\n  },\n\n  // Hilfsfunktionen\n  addAttendanceEntry: (entry: AttendanceEntry): void => {\n    const attendance = storage.getAttendance();\n    const existingIndex = attendance.findIndex(\n      a => a.employeeId === entry.employeeId && a.date === entry.date\n    );\n    \n    if (existingIndex >= 0) {\n      attendance[existingIndex] = entry;\n    } else {\n      attendance.push(entry);\n    }\n    \n    storage.setAttendance(attendance);\n  },\n\n  getAttendanceForDate: (date: string): AttendanceEntry[] => {\n    const attendance = storage.getAttendance();\n    return attendance.filter(entry => entry.date === date);\n  },\n\n  getAttendanceForEmployee: (employeeId: string, startDate?: string, endDate?: string): AttendanceEntry[] => {\n    const attendance = storage.getAttendance();\n    return attendance.filter(entry => {\n      if (entry.employeeId !== employeeId) return false;\n      if (startDate && entry.date < startDate) return false;\n      if (endDate && entry.date > endDate) return false;\n      return true;\n    });\n  },\n\n  // Alte Anwesenheitsdaten bereinigen (älter als 1 Woche)\n  cleanOldAttendanceData: (attendance: AttendanceEntry[]): AttendanceEntry[] => {\n    const oneWeekAgo = startOfWeek(subWeeks(new Date(), 1), { weekStartsOn: 1 });\n    const cutoffDate = format(oneWeekAgo, 'yyyy-MM-dd');\n    \n    return attendance.filter(entry => entry.date >= cutoffDate);\n  },\n\n  // Daten zurücksetzen\n  resetData: (): void => {\n    localStorage.removeItem(STORAGE_KEYS.EMPLOYEES);\n    localStorage.removeItem(STORAGE_KEYS.ATTENDANCE);\n    localStorage.removeItem(STORAGE_KEYS.DEPARTMENTS);\n  },\n};\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}