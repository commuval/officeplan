{"ast":null,"code":"import _objectSpread from\"C:/Users/MoritzSteinbach/Desktop/B\\xFCroplanner/officeplan/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from'react';import{format,startOfWeek,addDays,isToday}from'date-fns';import{de}from'date-fns/locale';import{ChevronLeft,ChevronRight,User,X,Plus,Dog,Trash2}from'lucide-react';import{storage}from'../utils/storage';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const AttendanceCalendar=_ref=>{let{selectedDate,onDateSelect}=_ref;const[employees,setEmployees]=useState([]);const[attendance,setAttendance]=useState([]);const[currentWeek,setCurrentWeek]=useState([]);const[newEmployeeName,setNewEmployeeName]=useState('');useEffect(()=>{console.log('AttendanceCalendar - Initialisierung');loadData();generateWeekDays();},[]);useEffect(()=>{generateWeekDays();},[selectedDate]);// Daten neu laden wenn sich Mitarbeiter oder Anwesenheitsdaten ändern\nuseEffect(()=>{const unsubscribe=storage.onDataChange(()=>{console.log('Datenänderung erkannt - lade Daten neu');loadData();});return unsubscribe;},[]);const loadData=async()=>{try{// Verwaiste Anwesenheitsdaten bereinigen\nawait storage.cleanOrphanedAttendanceData();const[allEmployees,allAttendance]=await Promise.all([storage.getEmployees(),storage.getAttendance()]);// Sortierung: Lokal hinzugefügte Mitarbeiter immer oben\nif(allEmployees.length>0){const localEmployeeIds=JSON.parse(localStorage.getItem('local_employees')||'[]');allEmployees.sort((a,b)=>{const aIsLocal=localEmployeeIds.includes(a.id);const bIsLocal=localEmployeeIds.includes(b.id);// Lokale Mitarbeiter kommen zuerst\nif(aIsLocal&&!bIsLocal)return-1;if(!aIsLocal&&bIsLocal)return 1;// Innerhalb der Gruppen nach ID sortieren\nconst idA=parseInt(a.id);const idB=parseInt(b.id);return idA-idB;});}setEmployees(allEmployees);setAttendance(allAttendance);}catch(error){console.error('Fehler beim Laden der Daten:',error);// Fallback zu leeren Arrays bei Fehlern\nsetEmployees([]);setAttendance([]);}};const generateWeekDays=()=>{const weekStart=startOfWeek(selectedDate,{weekStartsOn:1});const days=[];// Nur Montag bis Freitag (5 Tage)\nfor(let i=0;i<5;i++){days.push(addDays(weekStart,i));}setCurrentWeek(days);};const getStatusIcon=status=>{if(!status)return/*#__PURE__*/_jsx(Plus,{className:\"w-4 h-4 text-gray-400\"});switch(status){case'present':return/*#__PURE__*/_jsx(User,{className:\"w-4 h-4 text-green-600\"});case'present_with_dog':return/*#__PURE__*/_jsx(Dog,{className:\"w-4 h-4 text-orange-600\"});case'absent':return/*#__PURE__*/_jsx(X,{className:\"w-4 h-4 text-red-600\"});default:return/*#__PURE__*/_jsx(Plus,{className:\"w-4 h-4 text-gray-400\"});}};const getStatusColor=status=>{if(!status)return'bg-gray-50 text-gray-500 border-gray-200';switch(status){case'present':return'bg-green-100 text-green-800 border-green-200';case'present_with_dog':return'bg-orange-100 text-orange-800 border-orange-200';case'absent':return'bg-red-100 text-red-800 border-red-200';default:return'bg-gray-50 text-gray-500 border-gray-200';}};const getStatusText=status=>{if(!status)return'Hinzufügen';switch(status){case'present':return'Anwesend';case'present_with_dog':return'Mit Hund';case'absent':return'Abwesend';default:return'Hinzufügen';}};const getAttendanceForEmployeeAndDate=(employeeId,date)=>{const dateStr=format(date,'yyyy-MM-dd');return attendance.find(entry=>entry.employeeId===employeeId&&entry.date===dateStr);};const getDogCountForDate=date=>{const dateStr=format(date,'yyyy-MM-dd');return attendance.filter(entry=>entry.date===dateStr&&entry.status==='present_with_dog').length;};const handleCellClick=async(employeeId,date)=>{const existingEntry=getAttendanceForEmployeeAndDate(employeeId,date);const dogCount=getDogCountForDate(date);const dateStr=format(date,'yyyy-MM-dd');console.log('DEBUG - Click:',{employeeId,date:dateStr,existingStatus:existingEntry===null||existingEntry===void 0?void 0:existingEntry.status,dogCount,allEntriesForDate:attendance.filter(entry=>entry.date===dateStr)});try{if(existingEntry){// Status durchwechseln: anwesend -> abwesend -> mit hund -> hinzufügen (zurück zum Anfang)\nlet newStatus=null;if(existingEntry.status==='present'){newStatus='absent';}else if(existingEntry.status==='absent'){// Prüfe ob bereits 2 Hunde für diesen Tag vorhanden sind\nif(dogCount>=2){newStatus=null;// Überspringe \"mit Hund\" und gehe direkt zu \"hinzufügen\"\n}else{newStatus='present_with_dog';}}else if(existingEntry.status==='present_with_dog'){newStatus=null;// Zurück zu \"hinzufügen\"\n}else{newStatus='present';}if(newStatus===null){// Eintrag löschen (zurück zu \"hinzufügen\")\nawait storage.deleteAttendanceEntry(employeeId,dateStr);}else{const updatedEntry=_objectSpread(_objectSpread({},existingEntry),{},{status:newStatus});await storage.addAttendanceEntry(updatedEntry);}}else{// Neuen Eintrag erstellen - immer mit \"Anwesend\" beginnen\nconst newStatus='present';const newEntry={id:Date.now().toString(),employeeId:employeeId,date:dateStr,status:newStatus};await storage.addAttendanceEntry(newEntry);}// Daten neu laden um sicherzustellen, dass alles synchron ist\nconst updatedAttendance=await storage.getAttendance();setAttendance(updatedAttendance);console.log('Status aktualisiert:',{employeeId,date:dateStr,newStatus:existingEntry?'updated':'created',totalAttendanceEntries:updatedAttendance.length,entriesForDate:updatedAttendance.filter(entry=>entry.date===dateStr).length});}catch(error){console.error('Fehler beim Aktualisieren der Anwesenheit:',error);alert('Fehler beim Speichern der Anwesenheit. Bitte versuchen Sie es erneut.');}};const handleAddEmployee=async()=>{if(!newEmployeeName.trim())return;try{const newEmployee=await storage.addEmployee({name:newEmployeeName.trim(),department:'Unbekannt'// Standardwert\n});// Lokal hinzugefügte Mitarbeiter in localStorage speichern\nconst localEmployees=JSON.parse(localStorage.getItem('local_employees')||'[]');localEmployees.push(newEmployee.id);localStorage.setItem('local_employees',JSON.stringify(localEmployees));setNewEmployeeName('');await loadData();// Daten neu laden, um den neuen Mitarbeiter zu sehen\n}catch(error){console.error('Fehler beim Hinzufügen des Mitarbeiters:',error);alert('Fehler beim Hinzufügen des Mitarbeiters. Bitte versuchen Sie es erneut.');}};const handleDeleteEmployee=async employeeId=>{const employee=employees.find(emp=>emp.id===employeeId);if(!employee)return;const confirmMessage=\"Sind Sie sicher, dass Sie \\\"\".concat(employee.name,\"\\\" l\\xF6schen m\\xF6chten?\\n\\nDies l\\xF6scht auch alle Anwesenheitsdaten dieser Person.\");if(window.confirm(confirmMessage)){try{await storage.deleteEmployee(employeeId);setEmployees(employees.filter(emp=>emp.id!==employeeId));// Lokalen Mitarbeiter aus localStorage entfernen\nconst localEmployees=JSON.parse(localStorage.getItem('local_employees')||'[]');const updatedLocalEmployees=localEmployees.filter(id=>id!==employeeId);localStorage.setItem('local_employees',JSON.stringify(updatedLocalEmployees));// Anwesenheitsdaten lokal aktualisieren\nconst cleanedAttendance=attendance.filter(entry=>entry.employeeId!==employeeId);setAttendance(cleanedAttendance);console.log('Mitarbeiter erfolgreich gelöscht:',{employeeName:employee.name,employeeId,removedAttendanceEntries:attendance.length-cleanedAttendance.length});}catch(error){console.error('Fehler beim Löschen des Mitarbeiters:',error);alert('Fehler beim Löschen des Mitarbeiters. Bitte versuchen Sie es erneut.');}}};const handlePreviousWeek=()=>{const newDate=addDays(selectedDate,-7);onDateSelect(newDate);};const handleNextWeek=()=>{const newDate=addDays(selectedDate,7);onDateSelect(newDate);};const isCurrentWeek=()=>{const currentWeekStart=startOfWeek(new Date(),{weekStartsOn:1});const selectedWeekStart=startOfWeek(selectedDate,{weekStartsOn:1});return currentWeekStart.getTime()===selectedWeekStart.getTime();};return/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-6\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"flex items-center justify-between\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-4\",children:[!isCurrentWeek()&&/*#__PURE__*/_jsx(\"button\",{onClick:handlePreviousWeek,className:\"p-2 hover:bg-gray-100 rounded-lg transition-colors\",children:/*#__PURE__*/_jsx(ChevronLeft,{className:\"w-5 h-5\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-xl font-semibold text-gray-900\",children:currentWeek.length>0?\"\".concat(format(currentWeek[0],'dd.MM.yyyy',{locale:de}),\" - \").concat(format(currentWeek[4],'dd.MM.yyyy',{locale:de})):'Lade Kalender...'}),currentWeek.length>0&&/*#__PURE__*/_jsx(\"div\",{className:\"flex items-center justify-center mt-2 space-x-4 text-sm text-gray-600\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsx(Dog,{className:\"w-4 h-4 mr-1\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Max 2 Hunde pro Tag\"})]})})]}),/*#__PURE__*/_jsx(\"button\",{onClick:handleNextWeek,className:\"p-2 hover:bg-gray-100 rounded-lg transition-colors\",children:/*#__PURE__*/_jsx(ChevronRight,{className:\"w-5 h-5\"})})]})}),currentWeek.length>0&&/*#__PURE__*/_jsx(\"div\",{className:\"bg-white rounded-lg shadow overflow-hidden\",children:/*#__PURE__*/_jsx(\"div\",{className:\"overflow-x-auto\",children:/*#__PURE__*/_jsxs(\"table\",{className:\"w-full\",children:[/*#__PURE__*/_jsx(\"thead\",{className:\"bg-gray-50\",children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{className:\"px-4 py-3 text-left text-sm font-medium text-gray-500 uppercase tracking-wider\",children:\"Mitarbeiter\"}),currentWeek.map(date=>/*#__PURE__*/_jsx(\"th\",{className:\"px-2 py-3 text-center text-sm font-medium text-gray-500 uppercase tracking-wider\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col items-center\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-xs text-gray-400\",children:format(date,'EEE',{locale:de})}),/*#__PURE__*/_jsx(\"span\",{className:\"text-sm font-medium \".concat(isToday(date)?'text-blue-600 bg-blue-100 rounded-full w-8 h-8 flex items-center justify-center':''),children:format(date,'dd')})]})},date.toISOString()))]})}),/*#__PURE__*/_jsxs(\"tbody\",{className:\"bg-white divide-y divide-gray-200\",children:[employees.map(employee=>/*#__PURE__*/_jsxs(\"tr\",{className:\"hover:bg-gray-50\",children:[/*#__PURE__*/_jsx(\"td\",{className:\"px-4 py-3 whitespace-nowrap\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"flex-shrink-0 h-8 w-8\",children:/*#__PURE__*/_jsx(\"div\",{className:\"h-8 w-8 rounded-full bg-blue-100 flex items-center justify-center\",children:/*#__PURE__*/_jsx(\"span\",{className:\"text-sm font-medium text-blue-700\",children:employee.name.split(' ').map(n=>n[0]).join('')})})}),/*#__PURE__*/_jsx(\"div\",{className:\"ml-3\",children:/*#__PURE__*/_jsx(\"div\",{className:\"text-sm font-medium text-gray-900\",children:employee.name})})]}),/*#__PURE__*/_jsx(\"button\",{onClick:e=>{e.stopPropagation();handleDeleteEmployee(employee.id);},className:\"p-1 hover:bg-red-100 rounded-full text-red-600 transition-colors\",title:\"Mitarbeiter l\\xF6schen\",children:/*#__PURE__*/_jsx(Trash2,{className:\"w-4 h-4\"})})]})}),currentWeek.map(date=>{const entry=getAttendanceForEmployeeAndDate(employee.id,date);const dogCount=getDogCountForDate(date);return/*#__PURE__*/_jsx(\"td\",{className:\"px-2 py-3 text-center cursor-pointer hover:bg-gray-100 transition-colors relative\",onClick:()=>handleCellClick(employee.id,date),children:/*#__PURE__*/_jsx(\"div\",{className:\"flex items-center justify-center\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"inline-flex items-center px-2 py-1 rounded-full text-xs font-medium border \".concat(getStatusColor((entry===null||entry===void 0?void 0:entry.status)||null)),children:[getStatusIcon((entry===null||entry===void 0?void 0:entry.status)||null),/*#__PURE__*/_jsx(\"span\",{className:\"ml-1\",children:getStatusText((entry===null||entry===void 0?void 0:entry.status)||null)})]})})},date.toISOString());})]},employee.id)),/*#__PURE__*/_jsxs(\"tr\",{className:\"bg-gray-50 hover:bg-gray-100\",children:[/*#__PURE__*/_jsx(\"td\",{className:\"px-4 py-4 whitespace-nowrap\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-start space-x-4\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"flex-shrink-0 h-8 w-8\",children:/*#__PURE__*/_jsx(\"div\",{className:\"h-8 w-8 rounded-full bg-green-100 flex items-center justify-center\",children:/*#__PURE__*/_jsx(Plus,{className:\"w-4 h-4 text-green-600\"})})}),/*#__PURE__*/_jsx(\"div\",{className:\"flex-1 min-w-0\",children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-xs font-medium text-gray-700 mb-1\",children:\"Name\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Vollst\\xE4ndiger Name...\",value:newEmployeeName,onChange:e=>setNewEmployeeName(e.target.value),className:\"w-full px-3 py-2 text-sm border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\",onKeyPress:e=>e.key==='Enter'&&handleAddEmployee()})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"flex-shrink-0 flex items-center mt-6\",children:/*#__PURE__*/_jsx(\"button\",{onClick:handleAddEmployee,disabled:!newEmployeeName.trim(),className:\"px-4 py-1.5 text-sm font-medium bg-green-700 text-white rounded-md hover:bg-green-800 disabled:opacity-50 disabled:cursor-not-allowed transition-colors whitespace-nowrap\",children:\"Hinzuf\\xFCgen\"})})]})}),currentWeek.map(date=>/*#__PURE__*/_jsx(\"td\",{className:\"px-2 py-4 text-center\"},date.toISOString()))]})]})]})})})]});};export default AttendanceCalendar;","map":{"version":3,"names":["React","useState","useEffect","format","startOfWeek","addDays","isToday","de","ChevronLeft","ChevronRight","User","X","Plus","Dog","Trash2","storage","jsx","_jsx","jsxs","_jsxs","AttendanceCalendar","_ref","selectedDate","onDateSelect","employees","setEmployees","attendance","setAttendance","currentWeek","setCurrentWeek","newEmployeeName","setNewEmployeeName","console","log","loadData","generateWeekDays","unsubscribe","onDataChange","cleanOrphanedAttendanceData","allEmployees","allAttendance","Promise","all","getEmployees","getAttendance","length","localEmployeeIds","JSON","parse","localStorage","getItem","sort","a","b","aIsLocal","includes","id","bIsLocal","idA","parseInt","idB","error","weekStart","weekStartsOn","days","i","push","getStatusIcon","status","className","getStatusColor","getStatusText","getAttendanceForEmployeeAndDate","employeeId","date","dateStr","find","entry","getDogCountForDate","filter","handleCellClick","existingEntry","dogCount","existingStatus","allEntriesForDate","newStatus","deleteAttendanceEntry","updatedEntry","_objectSpread","addAttendanceEntry","newEntry","Date","now","toString","updatedAttendance","totalAttendanceEntries","entriesForDate","alert","handleAddEmployee","trim","newEmployee","addEmployee","name","department","localEmployees","setItem","stringify","handleDeleteEmployee","employee","emp","confirmMessage","concat","window","confirm","deleteEmployee","updatedLocalEmployees","cleanedAttendance","employeeName","removedAttendanceEntries","handlePreviousWeek","newDate","handleNextWeek","isCurrentWeek","currentWeekStart","selectedWeekStart","getTime","children","onClick","locale","map","toISOString","split","n","join","e","stopPropagation","title","type","placeholder","value","onChange","target","onKeyPress","key","disabled"],"sources":["C:/Users/MoritzSteinbach/Desktop/Büroplanner/officeplan/src/components/AttendanceCalendar.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { format, startOfWeek, addDays, isToday } from 'date-fns';\r\nimport { de } from 'date-fns/locale';\r\nimport { ChevronLeft, ChevronRight, User, X, Plus, Dog, Trash2 } from 'lucide-react';\r\nimport { Employee, AttendanceEntry, AttendanceStatus } from '../types';\r\nimport { storage } from '../utils/storage';\r\n\r\ninterface AttendanceCalendarProps {\r\n  selectedDate: Date;\r\n  onDateSelect: (date: Date) => void;\r\n}\r\n\r\nconst AttendanceCalendar: React.FC<AttendanceCalendarProps> = ({ selectedDate, onDateSelect }) => {\r\n  const [employees, setEmployees] = useState<Employee[]>([]);\r\n  const [attendance, setAttendance] = useState<AttendanceEntry[]>([]);\r\n  const [currentWeek, setCurrentWeek] = useState<Date[]>([]);\r\n  const [newEmployeeName, setNewEmployeeName] = useState('');\r\n\r\n  useEffect(() => {\r\n    console.log('AttendanceCalendar - Initialisierung');\r\n    \r\n    loadData();\r\n    generateWeekDays();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    generateWeekDays();\r\n  }, [selectedDate]);\r\n\r\n  // Daten neu laden wenn sich Mitarbeiter oder Anwesenheitsdaten ändern\r\n  useEffect(() => {\r\n    const unsubscribe = storage.onDataChange(() => {\r\n      console.log('Datenänderung erkannt - lade Daten neu');\r\n      loadData();\r\n    });\r\n\r\n    return unsubscribe;\r\n  }, []);\r\n\r\n  const loadData = async () => {\r\n    try {\r\n      // Verwaiste Anwesenheitsdaten bereinigen\r\n      await storage.cleanOrphanedAttendanceData();\r\n      \r\n      const [allEmployees, allAttendance] = await Promise.all([\r\n        storage.getEmployees(),\r\n        storage.getAttendance()\r\n      ]);\r\n      \r\n      // Sortierung: Lokal hinzugefügte Mitarbeiter immer oben\r\n      if (allEmployees.length > 0) {\r\n        const localEmployeeIds = JSON.parse(localStorage.getItem('local_employees') || '[]');\r\n        \r\n        allEmployees.sort((a, b) => {\r\n          const aIsLocal = localEmployeeIds.includes(a.id);\r\n          const bIsLocal = localEmployeeIds.includes(b.id);\r\n          \r\n          // Lokale Mitarbeiter kommen zuerst\r\n          if (aIsLocal && !bIsLocal) return -1;\r\n          if (!aIsLocal && bIsLocal) return 1;\r\n          \r\n          // Innerhalb der Gruppen nach ID sortieren\r\n          const idA = parseInt(a.id);\r\n          const idB = parseInt(b.id);\r\n          return idA - idB;\r\n        });\r\n      }\r\n      \r\n      setEmployees(allEmployees);\r\n      setAttendance(allAttendance);\r\n    } catch (error) {\r\n      console.error('Fehler beim Laden der Daten:', error);\r\n      // Fallback zu leeren Arrays bei Fehlern\r\n      setEmployees([]);\r\n      setAttendance([]);\r\n    }\r\n  };\r\n\r\n  const generateWeekDays = () => {\r\n    const weekStart = startOfWeek(selectedDate, { weekStartsOn: 1 });\r\n    const days: Date[] = [];\r\n    // Nur Montag bis Freitag (5 Tage)\r\n    for (let i = 0; i < 5; i++) {\r\n      days.push(addDays(weekStart, i));\r\n    }\r\n    setCurrentWeek(days);\r\n  };\r\n\r\n  const getStatusIcon = (status: AttendanceStatus | null) => {\r\n    if (!status) return <Plus className=\"w-4 h-4 text-gray-400\" />;\r\n    \r\n    switch (status) {\r\n      case 'present':\r\n        return <User className=\"w-4 h-4 text-green-600\" />;\r\n      case 'present_with_dog':\r\n        return <Dog className=\"w-4 h-4 text-orange-600\" />;\r\n      case 'absent':\r\n        return <X className=\"w-4 h-4 text-red-600\" />;\r\n      default:\r\n        return <Plus className=\"w-4 h-4 text-gray-400\" />;\r\n    }\r\n  };\r\n\r\n  const getStatusColor = (status: AttendanceStatus | null) => {\r\n    if (!status) return 'bg-gray-50 text-gray-500 border-gray-200';\r\n    \r\n    switch (status) {\r\n      case 'present':\r\n        return 'bg-green-100 text-green-800 border-green-200';\r\n      case 'present_with_dog':\r\n        return 'bg-orange-100 text-orange-800 border-orange-200';\r\n      case 'absent':\r\n        return 'bg-red-100 text-red-800 border-red-200';\r\n      default:\r\n        return 'bg-gray-50 text-gray-500 border-gray-200';\r\n    }\r\n  };\r\n\r\n  const getStatusText = (status: AttendanceStatus | null) => {\r\n    if (!status) return 'Hinzufügen';\r\n    \r\n    switch (status) {\r\n      case 'present':\r\n        return 'Anwesend';\r\n      case 'present_with_dog':\r\n        return 'Mit Hund';\r\n      case 'absent':\r\n        return 'Abwesend';\r\n      default:\r\n        return 'Hinzufügen';\r\n    }\r\n  };\r\n\r\n  const getAttendanceForEmployeeAndDate = (employeeId: string, date: Date) => {\r\n    const dateStr = format(date, 'yyyy-MM-dd');\r\n    return attendance.find(entry => \r\n      entry.employeeId === employeeId && entry.date === dateStr\r\n    );\r\n  };\r\n\r\n  const getDogCountForDate = (date: Date) => {\r\n    const dateStr = format(date, 'yyyy-MM-dd');\r\n    return attendance.filter(entry => \r\n      entry.date === dateStr && entry.status === 'present_with_dog'\r\n    ).length;\r\n  };\r\n\r\n  const handleCellClick = async (employeeId: string, date: Date) => {\r\n    const existingEntry = getAttendanceForEmployeeAndDate(employeeId, date);\r\n    const dogCount = getDogCountForDate(date);\r\n    const dateStr = format(date, 'yyyy-MM-dd');\r\n    \r\n    console.log('DEBUG - Click:', {\r\n      employeeId,\r\n      date: dateStr,\r\n      existingStatus: existingEntry?.status,\r\n      dogCount,\r\n      allEntriesForDate: attendance.filter(entry => entry.date === dateStr)\r\n    });\r\n    \r\n    try {\r\n      if (existingEntry) {\r\n        // Status durchwechseln: anwesend -> abwesend -> mit hund -> hinzufügen (zurück zum Anfang)\r\n        let newStatus: AttendanceStatus | null = null;\r\n        \r\n        if (existingEntry.status === 'present') {\r\n          newStatus = 'absent';\r\n        } else if (existingEntry.status === 'absent') {\r\n          // Prüfe ob bereits 2 Hunde für diesen Tag vorhanden sind\r\n          if (dogCount >= 2) {\r\n            newStatus = null; // Überspringe \"mit Hund\" und gehe direkt zu \"hinzufügen\"\r\n          } else {\r\n            newStatus = 'present_with_dog';\r\n          }\r\n        } else if (existingEntry.status === 'present_with_dog') {\r\n          newStatus = null; // Zurück zu \"hinzufügen\"\r\n        } else {\r\n          newStatus = 'present';\r\n        }\r\n        \r\n        if (newStatus === null) {\r\n          // Eintrag löschen (zurück zu \"hinzufügen\")\r\n          await storage.deleteAttendanceEntry(employeeId, dateStr);\r\n        } else {\r\n          const updatedEntry: AttendanceEntry = {\r\n            ...existingEntry,\r\n            status: newStatus,\r\n          };\r\n          await storage.addAttendanceEntry(updatedEntry);\r\n        }\r\n      } else {\r\n        // Neuen Eintrag erstellen - immer mit \"Anwesend\" beginnen\r\n        const newStatus: AttendanceStatus = 'present';\r\n        \r\n        const newEntry: AttendanceEntry = {\r\n          id: Date.now().toString(),\r\n          employeeId: employeeId,\r\n          date: dateStr,\r\n          status: newStatus,\r\n        };\r\n        \r\n        await storage.addAttendanceEntry(newEntry);\r\n      }\r\n      \r\n      // Daten neu laden um sicherzustellen, dass alles synchron ist\r\n      const updatedAttendance = await storage.getAttendance();\r\n      setAttendance(updatedAttendance);\r\n      \r\n      console.log('Status aktualisiert:', {\r\n        employeeId,\r\n        date: dateStr,\r\n        newStatus: existingEntry ? 'updated' : 'created',\r\n        totalAttendanceEntries: updatedAttendance.length,\r\n        entriesForDate: updatedAttendance.filter(entry => entry.date === dateStr).length\r\n      });\r\n    } catch (error) {\r\n      console.error('Fehler beim Aktualisieren der Anwesenheit:', error);\r\n      alert('Fehler beim Speichern der Anwesenheit. Bitte versuchen Sie es erneut.');\r\n    }\r\n  };\r\n\r\n  const handleAddEmployee = async () => {\r\n    if (!newEmployeeName.trim()) return;\r\n\r\n    try {\r\n      const newEmployee = await storage.addEmployee({\r\n        name: newEmployeeName.trim(),\r\n        department: 'Unbekannt', // Standardwert\r\n      });\r\n      \r\n      // Lokal hinzugefügte Mitarbeiter in localStorage speichern\r\n      const localEmployees = JSON.parse(localStorage.getItem('local_employees') || '[]');\r\n      localEmployees.push(newEmployee.id);\r\n      localStorage.setItem('local_employees', JSON.stringify(localEmployees));\r\n      \r\n      setNewEmployeeName('');\r\n      await loadData(); // Daten neu laden, um den neuen Mitarbeiter zu sehen\r\n    } catch (error) {\r\n      console.error('Fehler beim Hinzufügen des Mitarbeiters:', error);\r\n      alert('Fehler beim Hinzufügen des Mitarbeiters. Bitte versuchen Sie es erneut.');\r\n    }\r\n  };\r\n\r\n  const handleDeleteEmployee = async (employeeId: string) => {\r\n    const employee = employees.find(emp => emp.id === employeeId);\r\n    if (!employee) return;\r\n    \r\n    const confirmMessage = `Sind Sie sicher, dass Sie \"${employee.name}\" löschen möchten?\\n\\nDies löscht auch alle Anwesenheitsdaten dieser Person.`;\r\n    \r\n    if (window.confirm(confirmMessage)) {\r\n      try {\r\n        await storage.deleteEmployee(employeeId);\r\n        setEmployees(employees.filter(emp => emp.id !== employeeId));\r\n        \r\n        // Lokalen Mitarbeiter aus localStorage entfernen\r\n        const localEmployees = JSON.parse(localStorage.getItem('local_employees') || '[]');\r\n        const updatedLocalEmployees = localEmployees.filter((id: string) => id !== employeeId);\r\n        localStorage.setItem('local_employees', JSON.stringify(updatedLocalEmployees));\r\n        \r\n        // Anwesenheitsdaten lokal aktualisieren\r\n        const cleanedAttendance = attendance.filter(entry => entry.employeeId !== employeeId);\r\n        setAttendance(cleanedAttendance);\r\n        \r\n        console.log('Mitarbeiter erfolgreich gelöscht:', {\r\n          employeeName: employee.name,\r\n          employeeId,\r\n          removedAttendanceEntries: attendance.length - cleanedAttendance.length\r\n        });\r\n      } catch (error) {\r\n        console.error('Fehler beim Löschen des Mitarbeiters:', error);\r\n        alert('Fehler beim Löschen des Mitarbeiters. Bitte versuchen Sie es erneut.');\r\n      }\r\n    }\r\n  };\r\n\r\n  const handlePreviousWeek = () => {\r\n    const newDate = addDays(selectedDate, -7);\r\n    onDateSelect(newDate);\r\n  };\r\n\r\n  const handleNextWeek = () => {\r\n    const newDate = addDays(selectedDate, 7);\r\n    onDateSelect(newDate);\r\n  };\r\n\r\n  const isCurrentWeek = () => {\r\n    const currentWeekStart = startOfWeek(new Date(), { weekStartsOn: 1 });\r\n    const selectedWeekStart = startOfWeek(selectedDate, { weekStartsOn: 1 });\r\n    return currentWeekStart.getTime() === selectedWeekStart.getTime();\r\n  };\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Kalender-Header */}\r\n      <div className=\"flex items-center justify-between\">\r\n        <div className=\"flex items-center space-x-4\">\r\n          {!isCurrentWeek() && (\r\n            <button\r\n              onClick={handlePreviousWeek}\r\n              className=\"p-2 hover:bg-gray-100 rounded-lg transition-colors\"\r\n            >\r\n              <ChevronLeft className=\"w-5 h-5\" />\r\n            </button>\r\n          )}\r\n          \r\n          <div className=\"text-center\">\r\n            <h2 className=\"text-xl font-semibold text-gray-900\">\r\n              {currentWeek.length > 0 ? (\r\n                `${format(currentWeek[0], 'dd.MM.yyyy', { locale: de })} - ${format(currentWeek[4], 'dd.MM.yyyy', { locale: de })}`\r\n              ) : (\r\n                'Lade Kalender...'\r\n              )}\r\n            </h2>\r\n            {currentWeek.length > 0 && (\r\n              <div className=\"flex items-center justify-center mt-2 space-x-4 text-sm text-gray-600\">\r\n                <div className=\"flex items-center\">\r\n                  <Dog className=\"w-4 h-4 mr-1\" />\r\n                  <span>Max 2 Hunde pro Tag</span>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n          \r\n          <button\r\n            onClick={handleNextWeek}\r\n            className=\"p-2 hover:bg-gray-100 rounded-lg transition-colors\"\r\n          >\r\n            <ChevronRight className=\"w-5 h-5\" />\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Kalender-Tabelle */}\r\n      {currentWeek.length > 0 && (\r\n        <div className=\"bg-white rounded-lg shadow overflow-hidden\">\r\n          <div className=\"overflow-x-auto\">\r\n            <table className=\"w-full\">\r\n              <thead className=\"bg-gray-50\">\r\n                <tr>\r\n                  <th className=\"px-4 py-3 text-left text-sm font-medium text-gray-500 uppercase tracking-wider\">\r\n                    Mitarbeiter\r\n                  </th>\r\n                  {currentWeek.map((date) => (\r\n                    <th key={date.toISOString()} className=\"px-2 py-3 text-center text-sm font-medium text-gray-500 uppercase tracking-wider\">\r\n                      <div className=\"flex flex-col items-center\">\r\n                        <span className=\"text-xs text-gray-400\">\r\n                          {format(date, 'EEE', { locale: de })}\r\n                        </span>\r\n                        <span className={`text-sm font-medium ${\r\n                          isToday(date) ? 'text-blue-600 bg-blue-100 rounded-full w-8 h-8 flex items-center justify-center' : ''\r\n                        }`}>\r\n                          {format(date, 'dd')}\r\n                        </span>\r\n                      </div>\r\n                    </th>\r\n                  ))}\r\n                </tr>\r\n              </thead>\r\n              <tbody className=\"bg-white divide-y divide-gray-200\">\r\n                {employees.map((employee) => (\r\n                  <tr key={employee.id} className=\"hover:bg-gray-50\">\r\n                    <td className=\"px-4 py-3 whitespace-nowrap\">\r\n                      <div className=\"flex items-center justify-between\">\r\n                        <div className=\"flex items-center\">\r\n                          <div className=\"flex-shrink-0 h-8 w-8\">\r\n                            <div className=\"h-8 w-8 rounded-full bg-blue-100 flex items-center justify-center\">\r\n                              <span className=\"text-sm font-medium text-blue-700\">\r\n                                {employee.name.split(' ').map(n => n[0]).join('')}\r\n                              </span>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"ml-3\">\r\n                            <div className=\"text-sm font-medium text-gray-900\">\r\n                              {employee.name}\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <button\r\n                          onClick={(e) => {\r\n                            e.stopPropagation();\r\n                            handleDeleteEmployee(employee.id);\r\n                          }}\r\n                          className=\"p-1 hover:bg-red-100 rounded-full text-red-600 transition-colors\"\r\n                          title=\"Mitarbeiter löschen\"\r\n                        >\r\n                          <Trash2 className=\"w-4 h-4\" />\r\n                        </button>\r\n                      </div>\r\n                    </td>\r\n                    {currentWeek.map((date) => {\r\n                      const entry = getAttendanceForEmployeeAndDate(employee.id, date);\r\n                      const dogCount = getDogCountForDate(date);\r\n                      return (\r\n                        <td \r\n                          key={date.toISOString()} \r\n                          className=\"px-2 py-3 text-center cursor-pointer hover:bg-gray-100 transition-colors relative\"\r\n                          onClick={() => handleCellClick(employee.id, date)}\r\n                        >\r\n                          <div className=\"flex items-center justify-center\">\r\n                            <div className={`inline-flex items-center px-2 py-1 rounded-full text-xs font-medium border ${getStatusColor(entry?.status || null)}`}>\r\n                              {getStatusIcon(entry?.status || null)}\r\n                              <span className=\"ml-1\">{getStatusText(entry?.status || null)}</span>\r\n                            </div>\r\n                          </div>\r\n\r\n                        </td>\r\n                      );\r\n                    })}\r\n                  </tr>\r\n                ))}\r\n                \r\n                {/* Neue Mitarbeiter-Zeile */}\r\n                <tr className=\"bg-gray-50 hover:bg-gray-100\">\r\n                  <td className=\"px-4 py-4 whitespace-nowrap\">\r\n                    <div className=\"flex items-start space-x-4\">\r\n                      <div className=\"flex-shrink-0 h-8 w-8\">\r\n                        <div className=\"h-8 w-8 rounded-full bg-green-100 flex items-center justify-center\">\r\n                          <Plus className=\"w-4 h-4 text-green-600\" />\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"flex-1 min-w-0\">\r\n                        <div>\r\n                          <label className=\"block text-xs font-medium text-gray-700 mb-1\">\r\n                            Name\r\n                          </label>\r\n                          <input\r\n                            type=\"text\"\r\n                            placeholder=\"Vollständiger Name...\"\r\n                            value={newEmployeeName}\r\n                            onChange={(e) => setNewEmployeeName(e.target.value)}\r\n                            className=\"w-full px-3 py-2 text-sm border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n                            onKeyPress={(e) => e.key === 'Enter' && handleAddEmployee()}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"flex-shrink-0 flex items-center mt-6\">\r\n                        <button\r\n                          onClick={handleAddEmployee}\r\n                          disabled={!newEmployeeName.trim()}\r\n                          className=\"px-4 py-1.5 text-sm font-medium bg-green-700 text-white rounded-md hover:bg-green-800 disabled:opacity-50 disabled:cursor-not-allowed transition-colors whitespace-nowrap\"\r\n                        >\r\n                          Hinzufügen\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </td>\r\n                  {currentWeek.map((date) => (\r\n                    <td key={date.toISOString()} className=\"px-2 py-4 text-center\">\r\n                    </td>\r\n                  ))}\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AttendanceCalendar;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}